.\" ENVIRONMENTS: COHERENT, LC, TOS, ISIS, ANSI
.ds AS ANSI Standard
.ds KR The C Programming Language, Kernighan and Ritchie
.TH "defined" "C keyword" "(Language/preprocessing/macro replacement)" "C keyword"
.PC "Check if identifier is defined"
\fBdefined( \fIidentifier \fB)\fR
\fBdefined \fIidentifier\fR
.PP
The Standard describes a new C keyword,
.BR defined .
This keyword is used to check if
.I identifier
has been defined as
.if \nX<4 macro or manifest constant.
.if \nX=4 macro.
The preprocessing directives
.DM
.PP
.nf
	#if defined(identifier)
.fi
.DE
.PP
and
.DM
.PP
.nf
	#if defined identifier
.fi
.DE
.PP
have exactly the same effect as the directive:
.DM
.PP
.nf
	#ifdef identifier
.fi
.DE
.PP
The
.B defined
operator is permitted only within
.B #if
and
.B #elif
expressions.
It may not be used in any other context.
.PP
.B defined
is not a reserved word.
It can be used in more complex conditional statements, i.e.:
.DM
.PP
.nf
	#if LEVEL==3 && defined FOO
.fi
.DE
.SH Cross-references
.nf
\*(AS, \*(PS3.8.1
\*(KR, p. 91
.SH "See Also"
.B
.if \nX<4 #if, #ifdef, keywords, preprocessing
.if \nX=4 #if, #ifdef, keywords, macro replacement
.R
