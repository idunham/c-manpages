.\" ENVIRONMENTS: COHERENT, LC, TOS, ISIS, ANSI
.TH do "C keyword" "(Language/statements/iteration statements)" "C keyword"
.XR "loop construct "
.PC "Loop construct"
\fBdo { \fIstatement \fB} while(\fIcondition\^\fB);\fR
.PP
.B do
establishes conditional loop.
Unlike the loops established by
.B for
and
.BR while ,
the condition in a
.B do
loop is evaluated
.I after
the operation is performed.
This guarantees that at least one iteration of the loop will be executed.
.PP
.B do
always works in tandem with
.BR while .
For example
.DM
	do {
		puts("Next entry? ");
		fflush(stdout);
	} while(getchar() != EOF);
.DE
.PP
prints a prompt on the screen and waits for the user to reply.
The
.B do
loop is convenient in this instance because the prompt must appear
at least once on the screen before the user replies.
.SH Cross-references
.nf
\*(AS, \*(PS3.6.5.2
\*(KR, p. 63
.SH "See Also"
.B
.if \nX<4 break, C keywords, continue, for, statements, while
.if \nX=4 break, C keywords, continue, for, iteration statements, while
.R
